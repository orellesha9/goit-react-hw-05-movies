{"version":3,"file":"static/js/36.0c14aa33.chunk.js","mappings":"0QAEMA,E,OAAWC,EAAAA,OAAa,CAC5BC,QAAS,6BACTC,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIOC,EAAc,SAAAC,GACzB,OAAOR,EAASS,IAAI,YAADC,OAAaF,EAAE,mBACpC,EAIaG,EAAc,WACzB,OAAOX,EAASS,IAAI,qCACtB,EAEaG,EAAc,SAACC,GAC1B,OAAOb,EAASS,IAAI,yBAADC,OAA0BG,EAAK,8CACpD,EAIaC,EAAqB,SAACN,GACjC,OAAOR,EAASS,IAAI,YAADC,OAAaF,EAAE,2BACpC,EAGaO,EAAiB,SAACP,GAC7B,OAAOR,EAASS,IAAI,YAADC,OAAaF,EAAE,2BACpC,C,qIClCA,EAAuB,sB,SC+CvB,EA1CgB,WACd,IAAAQ,GAA+BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAOF,EAAA,GAAEG,EAAWH,EAAA,GAC3BI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACdnB,GAAOsB,EAAAA,EAAAA,MAAPtB,GAEFuB,EAAaC,QAAQZ,EAAQa,SAEnCC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAED,OAFCF,EAAAC,KAAA,EAElBlB,GAAW,GAAMiB,EAAAE,KAAA,GACM7B,EAAAA,EAAAA,IAAeP,GAAI,KAAD,EAAAgC,EAAAE,EAAAG,KAAjCJ,EAAID,EAAJC,KACRpB,EAAYoB,EAAKK,SAASJ,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAE1Bb,EAASa,EAAAK,GAAMC,SAAS,QAEN,OAFMN,EAAAC,KAAA,GAExBlB,GAAW,GAAOiB,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAX,EAAA,wBAErB,kBAVkB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWnBjB,GACF,GAAG,CAAC3B,IACJ,IAAM6C,EAAWjC,EAAQkC,KAAI,SAAAC,GAAA,IAAG/C,EAAE+C,EAAF/C,GAAIgD,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAAO,OACjDC,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACED,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASH,MACbI,EAAAA,EAAAA,KAAA,KAAAD,SAAIF,MAFGjD,EAGJ,IAGP,OACEkD,EAAAA,EAAAA,MAAAG,EAAAA,SAAA,CAAAF,SAAA,CACGnC,IAAWoC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eACd/B,IAASgC,EAAAA,EAAAA,KAAA,KAAAD,SAAI/B,IACbG,GAAkC,IAApBX,EAAQ0B,SACrBc,EAAAA,EAAAA,KAAA,MAAIE,UAAWC,EAAYJ,SAAEN,KAE7BO,EAAAA,EAAAA,KAAA,KAAAD,SAAG,+CACF,MAGT,C","sources":["api/post.js","pages/Reviews/reviews.module.css","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYjY0NzdhNWJlYzBjZDMxODg3YzI0Mjc4YTk2OTc0YSIsInN1YiI6IjY1NTY1YjMzNjdiNjEzNDVjY2FmNjRjZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qm6bCbKSjQCJ3o_hxKCB1vDtvimoS_GCFv44Y1Q5P3Y',\n  },\n});\n\nexport const getPostById = id => {\n  return instance.get(`/3/movie/${id}?language=en-US`);\n};\n\n\n\nexport const getAllPosts = () => {\n  return instance.get('/3/trending/all/day?language=en-US');\n};\n\nexport const searchPosts = (query) => {\n  return instance.get(`/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`);\n};\n// export const searchPost = search => {\n//     return axios.get(\"\")\n// }\nexport const getCommetsByPostId = (id) => {\n  return instance.get(`/3/movie/${id}/credits?language=en-US`);\n};\n\n\nexport const getReviewsById = (id) => {\n  return instance.get(`/3/movie/${id}/reviews?language=en-US`);\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"reviews_list__djUl7\"};","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviewsById } from 'api/post';\n\nimport styles from './reviews.module.css';\n\nconst Reviews = () => {\n  const [coments, setComments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  const isComments = Boolean(coments.length);\n\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        setLoading(true);\n        const { data } = await getReviewsById(id);\n        setComments(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [id]);\n  const elements = coments.map(({ id, author, content }) => (\n    <li key={id}>\n      <h3>Author: {author}</h3>\n      <p>{content}</p>\n    </li>\n  ));\n\n  return (\n    <>\n      {loading && <p>...Loading</p>}\n      {error && <p>{error}</p>}\n      {isComments && coments.results !== 0 ? (\n        <ul className={styles.list}>{elements}</ul>\n      ) : (\n        <p>We don't have any comments for this movie.</p>\n      )}{' '}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["instance","axios","baseURL","method","headers","accept","Authorization","getPostById","id","get","concat","getAllPosts","searchPosts","query","getCommetsByPostId","getReviewsById","_useState","useState","_useState2","_slicedToArray","coments","setComments","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useParams","isComments","Boolean","length","useEffect","fetchComments","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getReviewsById","data","_context","prev","next","sent","results","t0","message","finish","stop","apply","arguments","elements","map","_ref2","author","content","_jsxs","children","_jsx","_Fragment","className","styles"],"sourceRoot":""}