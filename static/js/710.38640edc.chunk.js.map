{"version":3,"file":"static/js/710.38640edc.chunk.js","mappings":"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","sources":["api/post.js","webpack://react-homework-template/./src/components/Button/button.module.css?6dda","components/Button/Button.jsx","webpack://react-homework-template/./src/components/PostsSearch/PostsSearchForm/posts-search-form.module.css?2d17","components/PostsSearch/PostsSearchForm/PostsSearchForm.jsx","../node_modules/nanoid/index.browser.js","webpack://react-homework-template/./src/components/PostsSearch/PostsSearchList/posts-search-list.module.css?3fde","components/PostsSearch/PostsSearchList/PostsSearchList.jsx","webpack://react-homework-template/./src/components/PostsSearch/posts-search.module.css?ce27","components/PostsSearch/PostsSearch.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org',\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyYjY0NzdhNWJlYzBjZDMxODg3YzI0Mjc4YTk2OTc0YSIsInN1YiI6IjY1NTY1YjMzNjdiNjEzNDVjY2FmNjRjZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.qm6bCbKSjQCJ3o_hxKCB1vDtvimoS_GCFv44Y1Q5P3Y',\n  },\n});\n\nexport const getPostById = id => {\n  return instance.get(`/3/movie/${id}?language=en-US`);\n};\n\n\n\nexport const getAllPosts = () => {\n  return instance.get('/3/trending/all/day?language=en-US');\n};\n\nexport const searchPosts = (query) => {\n  return instance.get(`/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`);\n};\n// export const searchPost = search => {\n//     return axios.get(\"\")\n// }\nexport const getCommetsByPostId = (id) => {\n  return instance.get(`/3/movie/${id}/credits?language=en-US`);\n};\n\n\nexport const getReviewsById = (id) => {\n  return instance.get(`/3/movie/${id}/reviews?language=en-US`);\n};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__HeAxz\"};","import styles from \"./button.module.css\";\n\nconst Button = ({ onClick, type = \"submit\", children }) => {\n    return <button onClick={onClick} type={type} className={styles.btn}>{children}</button>\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"posts-search-form_form__-GosI\",\"fieldGroup\":\"posts-search-form_fieldGroup__XdT+v\"};","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport styles from \"./posts-search-form.module.css\";\n\nconst PostsSearchForm = ({ onSubmit }) => {\n    const [state, setState] = useState({\n        search: \"\",\n    });\n\n    const inputRef = useRef(null);\n\n    useEffect(() => {\n        inputRef.current.focus();\n    }, [])\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        setState({\n            ...state,\n            [name]: value,\n        })\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({ ...state });\n        reset();\n    }\n\n    const reset = () => {\n        setState({\n            search: \"\"\n        });\n    }\n\n    const searchId = useMemo(() => nanoid(), []);\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.form}>\n            <div className={styles.fieldGroup}>\n                <label htmlFor={searchId}></label>\n                <input id={searchId} ref={inputRef} value={state.search} onChange={handleChange} required type=\"text\" name=\"search\" placeholder=\"Enter search phrase\" />\n            </div>\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n\n/*\nclass PostsSearchForm extends Component {\n    state = {\n        search: \"\"\n    }\n\n    handleChange = ({target}) => {\n        const {name, value} = target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit({...this.state});\n        this.setState({\n            search: \"\"\n        })\n    }\n\n    render() {\n        const {handleChange, handleSubmit} = this;\n        const {search} = this.state;\n\n        return (\n            <form onSubmit={handleSubmit} className={styles.form}>\n                <div className={styles.fieldGroup}>\n                    <label>Enter search phrase</label>\n                    <input value={search} onChange={handleChange} required type=\"text\" name=\"search\" placeholder=\"Enter search phrase\" />\n                </div>\n                <button type=\"submit\">Search</button>\n            </form>\n        )\n    }\n}\n*/\nexport default PostsSearchForm;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"posts-search-list_list__JqkA2\",\"item\":\"posts-search-list_item__nlgo+\"};","import styles from \"./posts-search-list.module.css\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst PostsSearchList = ({ items}) => {\n    const location = useLocation();\n\n    const elements = items.map(({id, title}) => (<li key={id} className={styles.item}>\n        <Link to={`/posts/${id}`} state={{from: location}}>{title}</Link>\n        {/* <p>{body}</p> */}\n    </li>));\nconsole.log(elements);\n    return (\n        (<ul className={styles.list}>\n            {elements}\n        </ul>)\n    )\n    \n}\n\nexport default PostsSearchList;","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"posts-search_error__rnQ3b\",\"loadMoreWrapper\":\"posts-search_loadMoreWrapper__Cw9E9\"};","import { useEffect, useState } from 'react';\n\nimport Button from '../Button/Button';\n\nimport PostsSearchForm from './PostsSearchForm/PostsSearchForm';\nimport PostsSearchList from './PostsSearchList/PostsSearchList';\n\nimport { searchPosts } from '../../api/post';\nimport { useSearchParams } from 'react-router-dom';\nimport styles from './posts-search.module.css';\n\nconst PostsSearch = () => {\n  // const [search, setSearch] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const [page, setPage] = useState(1);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('search');\n  const page = searchParams.get('page');\n  console.log(search);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const { data } = await searchPosts(search, page);\n        // console.log(data.results);\n        setPosts(prevPosts =>\n          data.results?.length ? [...prevPosts, ...data.results] : prevPosts\n        );\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (search) {\n      fetchPosts();\n    }\n  }, [search, page]);\n\n  const handleSearch = ({ search }) => {\n    // setSearch(search);\n    setSearchParams({ search, page: 1 });\n    // setPage(1);\n    setPosts([]);\n  };\n\n  const loadMore = () => setSearchParams({ search, page: Number(page) + 1 });\n\n  const isPosts = Boolean(posts.length);\n  return (\n    <>\n      <PostsSearchForm onSubmit={handleSearch} />\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {isPosts && <PostsSearchList items={posts} />}\n      {isPosts && (\n        <div className={styles.loadMoreWrapper}>\n          <Button onClick={loadMore} type=\"button\">\n            Load more\n          </Button>\n        </div>\n      )}\n    </>\n  );\n};\n\n/*\nclass PostsSearch extends Component {\n    state = {\n        search: \"\",\n        posts: [],\n        loading: false,\n        error: null,\n        page: 1,\n        modalOpen: false,\n        postDetails: {}\n    }\n\n    async componentDidUpdate(_, prevState) {\n        const { search, page } = this.state;\n        if (search && (search !== prevState.search || page !== prevState.page)) {\n            this.fetchPosts();\n        }\n    }\n\n    async fetchPosts() {\n        const { search, page } = this.state;\n        try {\n            this.setState({\n                loading: true,\n            });\n            const { data } = await searchPosts(search, page);\n            this.setState(({ posts }) => ({\n                posts: data?.length ? [...posts, ...data] : posts,\n            }))\n        }\n        catch (error) {\n            this.setState({\n                error: error.message\n            })\n        }\n        finally {\n            this.setState({\n                loading: false,\n            })\n        }\n    }\n\n    handleSearch = ({ search }) => {\n        this.setState({\n            search,\n            posts: [],\n            page: 1,\n        })\n    }\n\n    loadMore = () => {\n        this.setState(({ page }) => ({ page: page + 1 }));\n    }\n\n    showModal = ({title, body}) => {\n        this.setState({\n            modalOpen: true,\n            postDetails: {\n                title,\n                body,\n            }\n        })\n    }\n\n    closeModal = ()=> {\n        this.setState({\n            modalOpen: false,\n            postDetails: {}\n        })\n    }\n\n    render() {\n        const { handleSearch, loadMore, showModal, closeModal } = this;\n        const { posts, loading, error, modalOpen, postDetails } = this.state;\n\n        const isPosts = Boolean(posts.length);\n\n        return (\n            <>\n                <PostsSearchForm onSubmit={handleSearch} />\n                {error && <p className={styles.error}>{error}</p>}\n                {loading && <p>...Loading</p>}\n                {isPosts && <PostsSearchList showModal={showModal} items={posts} />}\n                {isPosts && <div className={styles.loadMoreWrapper}>\n                    <Button onClick={loadMore} type=\"button\">Load more</Button>\n                </div>}\n                {modalOpen && <Modal close={closeModal}>\n                                <h2>{postDetails.title}</h2>\n                                <p>{postDetails.body}</p>\n                            </Modal>}\n            </>\n        )\n    }\n}\n*/\nexport default PostsSearch;\n","// import styles from './movies-page.module.css';\nimport PostsSearch from \"components/PostsSearch/PostsSearch\";\n\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <h1> Movie Page</h1>\n      <PostsSearch/>\n    </div>\n  );\n};\nexport default MoviesPage;\n"],"names":["instance","axios","baseURL","method","headers","accept","Authorization","getPostById","id","get","concat","getAllPosts","searchPosts","query","getCommetsByPostId","getReviewsById","_ref","onClick","_ref$type","type","children","_jsx","className","styles","onSubmit","_useState","useState","search","_useState2","_slicedToArray","state","setState","inputRef","useRef","useEffect","current","focus","reset","searchId","useMemo","size","arguments","length","undefined","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","nanoid","_jsxs","e","preventDefault","_objectSpread","htmlFor","ref","value","onChange","_ref2","target","name","_defineProperty","required","placeholder","items","location","useLocation","elements","map","title","Link","to","from","console","log","posts","setPosts","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","page","fetchPosts","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$searchPosts","data","_context","prev","next","sent","prevPosts","_data$results","results","_toConsumableArray","t0","message","finish","stop","apply","isPosts","Boolean","_Fragment","PostsSearchForm","PostsSearchList","Button","Number","PostsSearch"],"sourceRoot":""}